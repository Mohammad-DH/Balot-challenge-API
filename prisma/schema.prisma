generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Admin {
  Id Int @id @default(autoincrement()) @unique
  UserName String
  Password String
  Active Boolean @default(false)
}

model User {
  Id String @id @unique
  Points Int @default(0)

  Rewards Reward[]
  Records Record[]

  Challenges UserAndChallenge[]
}

model Challenge {
  Id Int @id @default(autoincrement()) @unique
  Name String 
  CreatedTime DateTime
  Start DateTime
  End DateTime
  Active Boolean @default(false)

  RestaurantId Int
  Restaurant Restaurant @relation(fields: [RestaurantId], references: [Id])

  Rewards Reward[]
  Records Record[]

  Users UserAndChallenge[]
}

model UserAndChallenge {
  User       User     @relation(fields: [UserId], references: [Id])
  UserId    String

  Challenge   Challenge @relation(fields: [ChallengeId], references: [Id])
  ChallengeId Int

  @@id([UserId, ChallengeId])
}

model Record{
  Id Int @id @default(autoincrement()) @unique
  CreatedTime DateTime
  UserId String 
  User User @relation(fields: [UserId], references: [Id])
  Nickname String
  ChallengeId Int
  Challenge Challenge @relation(fields: [ChallengeId], references: [Id])
  Score Int @default(0)
  SpentTime Int @default(0)
}

model Reward {
  Id Int @id @default(autoincrement()) @unique
  Name String
  Points Int
  Rank Int

  User User?     @relation(fields: [UserId], references: [Id])
  UserId String?

  ChallengeId Int
  Challenge Challenge @relation(fields: [ChallengeId], references: [Id] , onDelete: Cascade, onUpdate: Cascade)  
} 

model Restaurant {
  Id Int @id @default(autoincrement()) @unique
  Name String
  
  challenges Challenge[]
} 